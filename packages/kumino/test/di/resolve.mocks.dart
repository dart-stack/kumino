// Mocks generated by Mockito 5.4.4 from annotations
// in kumino/test/di/resolve.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:kumino/src/di/resolve.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeServiceConfiguration_0 extends _i1.SmartFake
    implements _i2.ServiceConfiguration {
  _FakeServiceConfiguration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ServiceConfigurationFinder].
///
/// See the documentation for Mockito's code generation for more information.
class MockServiceConfigurationFinder extends _i1.Mock
    implements _i2.ServiceConfigurationFinder {
  @override
  _i2.ServiceConfiguration findOrDefaultServiceConfiguration(
          Type? serviceType) =>
      (super.noSuchMethod(
        Invocation.method(
          #findOrDefaultServiceConfiguration,
          [serviceType],
        ),
        returnValue: _FakeServiceConfiguration_0(
          this,
          Invocation.method(
            #findOrDefaultServiceConfiguration,
            [serviceType],
          ),
        ),
        returnValueForMissingStub: _FakeServiceConfiguration_0(
          this,
          Invocation.method(
            #findOrDefaultServiceConfiguration,
            [serviceType],
          ),
        ),
      ) as _i2.ServiceConfiguration);
}
